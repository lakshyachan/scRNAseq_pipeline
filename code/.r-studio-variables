#
# PAM auth helper used by RStudio
export RSTUDIO_AUTH=/data/apps/helpers/pam-arch

export csrf_token=$(uuidgen)
export USER=$(id -un)

# Check if R is loaded and accessible
if which R >/dev/null 2>&1; then
    echo "R is installed and accessible."
    R=$(which R)
    export R_LIBS=$R_HOME/library
    module load GCC/11.3.0 RStudio-Server/2022.07.2+576-foss-2022a-Java-11-R-4.2.1
    ml -R/4.2.1-foss-2022a
else
    echo "R is not found or not accessible. Using R/4.2.1-foss-2022a module"
    module load GCC/11.3.0 RStudio-Server/2022.07.2+576-foss-2022a-Java-11-R-4.2.1
    R=$(which R)
    export R_LIBS=$R_HOME/library
fi

echo "Using R $R"

readonly export PORT=$(python -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()')

export workdir=$(python -c 'import tempfile; print(tempfile.mkdtemp())')
mkdir -p -m 770 ${workdir}/var/run ${workdir}/tmp ${workdir}/var/lib/rstudio-server ${workdir}/var/log ${workdir}/rstudio

export XDG_CONFIG_DIRS=$workdir

cat > ${workdir}/env-vars <<END
XDG_DATA_HOME=$HOME
END

cat > ${workdir}/rstudio/database.conf <<END
provider=sqlite
directory=${workdir}/var/lib/rstudio-server
END

cat > ${workdir}/rstudio/rserver.conf <<END
# to run all R sessions with a lower scheduling priority.
#
rsession-which-r=$R
rsession-path=$(which rsession)
server-data-dir=${workdir}/var/run/rstudio-server
www-address=0.0.0.0
www-port=${PORT}
END

cat >  ${workdir}/rstudio/rsession.conf << END
session-timeout-minutes=0
r-libs-user=${R_LIBS_USER}
END

chmod +x ${workdir}/rstudio/rsession.conf

cat > ${workdir}/rstudio/logging.conf << END
[*]
log-level=info
logger-type=syslog

[@rserver]
log-dir=${workdir}/var/log/rstudio-server
log-level=error
logger-type=file
max-size-mb=10
rotate=1

[file-locking]
log-dir=${workdir}/var/log/file-locking
log-file-mode=600
END

if [ ! -d ${R_LIBS_USER} ]; then
   mkdir -p ${R_LIBS_USER}
fi

